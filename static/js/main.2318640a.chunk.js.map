{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABETICALLY","SORT_BY_LENGTH","SORT_BY_REVERSE","getPreparedGood","goods","sortField","revers","visibleGoods","copyGoodsFromServer","sort","good1","good2","localeCompare","length","reverse","App","useState","setSortField","setVisibleGoods","setReverse","alphabet","setAlphabet","setLength","isReset","setIsReset","copyVisibleGoods","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAyB,WACzBC,EAAiB,SACjBC,EAAkB,UAExB,SAASC,EAAgBC,EAAOC,EAAWC,GACzC,IAAIC,EAAY,YAAOH,GACjBI,EAAmB,UAAOT,GAEhC,GAAIM,EACF,OAAQA,GACN,KAAKL,EACHO,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKV,EACHM,EACIC,EAAoBC,MAAK,SAACC,EAAOC,GAAR,OACzBD,EAAMG,OAASF,EAAME,UAEzB,MACF,KAAKX,EACHK,EAAaO,UAOnB,OAAOR,EAASC,EAAaO,UAAYP,EAGpC,IAAMQ,EAAM,WACjB,MAAkCC,mBAAS,MAA3C,mBAAOX,EAAP,KAAkBY,EAAlB,KACA,EAAwCD,mBAASjB,GAAjD,mBAAOQ,EAAP,KAAqBW,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOF,EAAP,KAAgBK,EAAhB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA4BL,oBAAS,GAArC,mBAAOH,EAAP,KAAeS,EAAf,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAgB,YAAOlB,GAE7B,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,IAAiB,IAAbR,EACJ,YAAyB,IAAbA,IAEdS,QAAS,WACPZ,EAAajB,GACbkB,EACEf,EAAgBI,EAAcP,EAAwBc,IAExDO,GAAY,GACZC,GAAU,GACVE,GAAW,IAbf,iCAmBA,wBACEG,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,IAAe,IAAXf,EACJ,YAAuB,IAAXA,IAEdgB,QAAS,WACPZ,EAAahB,GACbiB,EACEf,EAAgBI,EAAcN,EAAgBa,IAEhDQ,GAAU,GACVD,GAAY,GACZG,GAAW,IAbf,4BAmBA,wBACEG,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,GAAId,EACJ,YAAaA,IAEfe,QAAS,WACPV,GAAYL,GACZG,EAAaf,GACbgB,EAAgBf,EAAgBI,EAAcF,GAAYS,IAC1DU,EACEM,KAAKC,UAAUN,EAAiBX,aAC5BgB,KAAKC,UAAUhC,KAZzB,qBAmBCwB,GACC,wBACEI,KAAK,SACLD,UAAWE,IAAG,mBAAoB,CAChC,GAAkB,KAAdvB,EACJ,WAA0B,KAAdA,IAEdwB,QAAS,WACPZ,EAAa,IACbC,EAAgBnB,GAChBsB,GAAY,GACZC,GAAU,GACVH,GAAW,GACXK,GAAW,IAZf,sBAoBJ,6BACGjB,EAAayB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC3IjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2318640a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABETICALLY = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_REVERSE = 'reverse';\n\nfunction getPreparedGood(goods, sortField, revers) {\n  let visibleGoods = [...goods];\n  const copyGoodsFromServer = [...goodsFromServer];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_BY_ALPHABETICALLY:\n        visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n      case SORT_BY_LENGTH:\n        visibleGoods\n          = copyGoodsFromServer.sort((good1, good2) => (\n            good1.length - good2.length\n          ));\n        break;\n      case SORT_BY_REVERSE:\n        visibleGoods.reverse();\n        break;\n      default:\n        break;\n    }\n  }\n\n  return revers ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(null);\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [reverse, setReverse] = useState(false);\n  const [alphabet, setAlphabet] = useState(false);\n  const [length, setLength] = useState(false);\n  const [isReset, setIsReset] = useState(false);\n  const copyVisibleGoods = [...visibleGoods];\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            '': alphabet === true,\n            'is-light': alphabet === false,\n          })}\n          onClick={() => {\n            setSortField(SORT_BY_ALPHABETICALLY);\n            setVisibleGoods(\n              getPreparedGood(visibleGoods, SORT_BY_ALPHABETICALLY, reverse),\n            );\n            setAlphabet(true);\n            setLength(false);\n            setIsReset(true);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            '': length === true,\n            'is-light': length === false,\n          })}\n          onClick={() => {\n            setSortField(SORT_BY_LENGTH);\n            setVisibleGoods(\n              getPreparedGood(visibleGoods, SORT_BY_LENGTH, reverse),\n            );\n            setLength(true);\n            setAlphabet(false);\n            setIsReset(true);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            '': reverse,\n            'is-light': !reverse,\n          })}\n          onClick={() => {\n            setReverse(!reverse);\n            setSortField(SORT_BY_REVERSE);\n            setVisibleGoods(getPreparedGood(visibleGoods, sortField, !reverse));\n            setIsReset(\n              JSON.stringify(copyVisibleGoods.reverse())\n              !== JSON.stringify(goodsFromServer),\n            );\n          }}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className={cn('button is-danger', {\n              '': sortField === '',\n              'is-light': sortField !== '',\n            })}\n            onClick={() => {\n              setSortField('');\n              setVisibleGoods(goodsFromServer);\n              setAlphabet(false);\n              setLength(false);\n              setReverse(false);\n              setIsReset(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}